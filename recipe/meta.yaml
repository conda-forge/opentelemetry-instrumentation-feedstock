{% set name = "opentelemetry-instrumentation" %}
{% set version = "0.49b2" %}
{% set python_min = python_min|default("3.9") %}

# Common to all opentelemetry python libraries
{% set vsegments = version.split('.') %}
# not all packages in opentelemetry are at the most recent version
{% set preoffset = 19 %}
{% set patchoffset = 1 %} 
{% set is_rel = (vsegments[0] == '1') %}
{% set canonical_minor_pre = (vsegments[1].split('b')[0] | int) - (preoffset | int) %}
{% set canonical_minor_rel = (vsegments[1] | int) %}

{% set canonical_patch_pre = (vsegments[1].split('b')[1] | int) if (not is_rel) else -1 %}
{% set canonical_patch_rel = (vsegments[2] | int) if (is_rel) else -1 %}
{% set canonical_patch = canonical_patch_rel if (is_rel) else (canonical_patch_pre) %}
# Since we have the case where
# 1.4.1 -> 0.23b2, 1.4.0 -> 0.23b0, we assume that there is an offset when non-zero?
{% set patchoffset = 0 if (canonical_patch == 0) else patchoffset %}
{% set canonical_patch = canonical_patch_rel if (is_rel) else (canonical_patch_pre - patchoffset) %}

# determine the canonical minor version of the 1.x opentelemetry associated with this package
{% set canonical_minor = canonical_minor_rel if is_rel else canonical_minor_pre %}
{% set vpre = '0.{}b{}'.format(canonical_minor + preoffset, canonical_patch + patchoffset) %}
{% set vrel = '1.{}.{}'.format(canonical_minor, canonical_patch) %}


package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/opentelemetry_instrumentation-{{ version }}.tar.gz
  sha256: 8cf00cc8d9d479e4b72adb9bd267ec544308c602b7188598db5a687e77b298e2

build:
  number: 0
  noarch: python
  entry_points:
    - opentelemetry-instrument = opentelemetry.instrumentation.auto_instrumentation:run
    - opentelemetry-bootstrap = opentelemetry.instrumentation.bootstrap:run
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation

requirements:
  host:
    - python {{ python_min }}
    - pip
    - hatchling
  run:
    - python >={{ python_min }}
    - opentelemetry-api ~=1.4
    - setuptools >=16.0
    - wrapt <2.0.0,>=1.0.0
    - packaging >=18.0
    - opentelemetry-semantic-conventions ==0.49b2

test:
  imports:
    - opentelemetry.instrumentation
  commands:
    - pip check
    - opentelemetry-instrument --help
    - opentelemetry-bootstrap --help
  requires:
    - python {{ python_min }}
    - pip

about:
  home: https://github.com/open-telemetry/opentelemetry-python/tree/master/opentelemetry-instrumentation
  summary: Instrumentation Tools & Auto Instrumentation for OpenTelemetry Python
  license: Apache-2.0
  license_file: LICENSE.txt

extra:
  recipe-maintainers:
    - rxm7706
    - twoodwark
    - mariusvniekerk
    - conda-forge/opentelemetry-api
